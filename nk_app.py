import streamlit as st
import pandas as pd
import streamlit.components.v1 as components

# Load the dataset
data_path = "data_enkn.csv"  # Updated to new dataset

df = pd.read_csv(data_path)

# Mapping of soil types and irrigation methods to Kannada translations
soil_translation = {
    "Alluvial": "‡≤Æ‡≥Ü‡≤ï‡≥ç‡≤ï‡≤≤‡≥Å",
    "Black": "‡≤ï‡≤™‡≥ç‡≤™‡≥Å ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å",
    "Red": "‡≤ï‡≥Ü‡≤Ç‡≤™‡≥Å ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å",
    "Laterite": "‡≤≤‡≥á‡≤ü‡≤∞‡≥à‡≤ü‡≥ç",
    "Clay": "‡≤Æ‡≤£‡≥ç‡≤£‡≤ø‡≤® ‡≤Æ‡≤ø‡≤∂‡≥ç‡≤∞‡≤£",
    "Sandy": "‡≤Æ‡≤∞‡≤≥‡≥Å ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å",
    "Loamy": "‡≤≤‡≥ã‡≤Æ‡≤ø ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å"
}

irrigation_translation = {
    "Drip": "‡≤§‡≥ä‡≤ü‡≥ç‡≤ü‡≥Å ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø",
    "Sprinkler": "‡≤Æ‡≤ø‡≤Ç‡≤ö‡≥Å ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø",
    "Flood": "‡≤™‡≥ä‡≤ï‡≥ç‡≤ï‡≤≤‡≤ø ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø",
    "Canal": "‡≤ï‡≥ç‡≤Ø‡≤æ‡≤®‡≤≤‡≥ç ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø",
    "Tube well": "‡≤ü‡≥ç‡≤Ø‡≥Ç‡≤¨‡≥ç ‡≤µ‡≥Ü‡≤≤‡≥ç ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø",
    "Rain-fed": "‡≤Æ‡≤≥‡≥Ü‡≤Ø‡≤æ‡≤ß‡≤æ‡≤∞‡≤ø‡≤§"
}

# Custom CSS for a more attractive, app-like UI
st.markdown("""
    <style>
        body {background-color: #121212; color: white;}
        .stApp {background-color: #1E1E1E; padding: 20px; border-radius: 10px; color: white;}
        h1 {color: #4CAF50; text-align: center; font-size: 32px;}
        .header {background-color: #4CAF50; padding: 15px; border-radius: 10px; color: white; text-align: center;}
        .stButton>button {background-color: #4CAF50; color: white; font-size: 18px; border-radius: 8px; padding: 10px;}
        .stRadio>div {color: white;}
        .container {padding: 20px; border-radius: 15px; background: #222; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);}
        .result-box {background: #333; padding: 15px; border-radius: 10px; margin-top: 20px;}
    </style>
""", unsafe_allow_html=True)

# Streamlit App Title
st.markdown('<div class="header"><h1>‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≥É‡≤∑‡≤ø‡≤ï - Namma Kisaan</h1></div>', unsafe_allow_html=True)

# Layout for Registration & Crop Recommendation
col1, col2 = st.columns([1, 1])

with col1:
    st.markdown("<div class='container'>", unsafe_allow_html=True)
    st.subheader("üë§ Farmer Registration - ‡≤∞‡≥à‡≤§‡≤∞ ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø")
    name = st.text_input("üßë Name / ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å")
    age = st.number_input("üìÖ Age / ‡≤µ‡≤Ø‡≤∏‡≥ç‡≤∏‡≥Å", min_value=18, max_value=100, step=1)
    aadhaar = st.text_input("üî¢ Aadhaar Number / ‡≤Ü‡≤ß‡≤æ‡≤∞‡≥ç ‡≤∏‡≤Ç‡≤ñ‡≥ç‡≤Ø‡≥Ü")
    ownership = st.radio("üè† Ownership Type / ‡≤Æ‡≤æ‡≤≤‡≤ø‡≤ï‡≤§‡≥ç‡≤µ", ["Owner / ‡≤Æ‡≤æ‡≤≤‡≥Ä‡≤ï", "Lessee / ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤ó‡≥Ü‡≤¶‡≤æ‡≤∞"], horizontal=True)
    location = st.text_input("üìç Location / ‡≤∏‡≥ç‡≤•‡≤≥")
    plot_size = st.number_input("üìè Plot Size (Acres) / ‡≤ú‡≤Æ‡≥Ä‡≤®‡≥Å ‡≤ó‡≤æ‡≤§‡≥ç‡≤∞ (‡≤é‡≤ï‡≤∞‡≥Ü)", min_value=0.1, step=0.1)
    st.markdown("</div>", unsafe_allow_html=True)
    
with col2:
    st.markdown("<div class='container'>", unsafe_allow_html=True)
    st.subheader("üå± Crop & Season Suggestion - ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ã‡≤§‡≥Å ‡≤∂‡≤ø‡≤´‡≤æ‡≤∞‡≤∏‡≥Å")
    soil_options = [f"{soil} / {soil_translation.get(soil, soil)}" for soil in df["Soil type"].dropna().unique()]
    irrigation_options = [f"{irrigation} / {irrigation_translation.get(irrigation, irrigation)}" for irrigation in df["Irrigation"].unique()]
    soil_type = st.selectbox("üåç Select Soil Type / ‡≤Æ‡≤£‡≥ç‡≤£‡≤ø‡≤® ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞", soil_options)
    irrigation = st.selectbox("üíß Select Irrigation Type / ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞", irrigation_options)
    
    # Extracting only English part for filtering
    soil_type_selected = soil_type.split(" / ")[0]
    irrigation_selected = irrigation.split(" / ")[0]
    
    # Filter dataset based on user input
    filtered_df = df[(df["Soil type"] == soil_type_selected) & (df["Irrigation"] == irrigation_selected)]
    
    if not filtered_df.empty:
        recommended_crop = filtered_df.iloc[0]["Crops"]
        recommended_season = filtered_df.iloc[0]["Season"]
        temperature = filtered_df.iloc[0]["Temperature"]
        rainfall = filtered_df.iloc[0]["Rainfall"]
        st.markdown("<div class='result-box'>", unsafe_allow_html=True)
        st.success(f"‚úÖ **Recommended Crop:** {recommended_crop}\nüå¶Ô∏è **Best Season:** {recommended_season}\nüå°Ô∏è **Optimal Temperature:** {temperature}¬∞C\nüåßÔ∏è **Required Rainfall:** {rainfall} mm")
        st.markdown("</div>", unsafe_allow_html=True)
    else:
        st.warning("‚ö†Ô∏è No matching data found. Try a different selection.")
    st.markdown("</div>", unsafe_allow_html=True)

# Footer
st.markdown("""
    <hr>
    <div style='text-align: center;'>
        <p style='color: white;'>üöÄ Built with ‚ù§Ô∏è by Namma Kisaan Team</p>
    </div>
""", unsafe_allow_html=True)
