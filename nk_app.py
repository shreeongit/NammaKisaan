import streamlit as st
import pandas as pd

def load_data():
    # Load the pre-existing dataset
    file_path = "data_enkn.xlsx"  # Ensure this file is in the same directory or adjust the path accordingly
    df = pd.read_excel(file_path)
    return df

def main():
    st.set_page_config(page_title="Namma Kisaan", layout="wide")
    
    st.title("üåæ Namma Kisaan - ‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≤ø‡≤∏‡≤æ‡≤®‡≥ç üåæ")
    
    # Sidebar for registration
    st.sidebar.header("üë§ Farmer Registration / ‡≤∞‡≥à‡≤§ ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø")
    name = st.sidebar.text_input("Name / ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å")
    age = st.sidebar.number_input("Age / ‡≤µ‡≤Ø‡≤∏‡≥ç‡≤∏‡≥Å", min_value=18, max_value=100, step=1)
    aadhaar = st.sidebar.text_input("Aadhaar Number / ‡≤Ü‡≤¶‡≤æ‡≤∞‡≥ç ‡≤∏‡≤Ç‡≤ñ‡≥ç‡≤Ø‡≥Ü")
    owner_type = st.sidebar.radio("Ownership Type / ‡≤Æ‡≤æ‡≤≤‡≤ï‡≤§‡≥ç‡≤µ ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞", ["Owner / ‡≤Æ‡≤æ‡≤≤‡≥Ä‡≤ï", "Lessee / ‡≤¨‡≤æ‡≤°‡≤ø‡≤ó‡≥Ü"])
    location = st.sidebar.text_input("Location / ‡≤∏‡≥ç‡≤•‡≤≥")
    plot_size = st.sidebar.number_input("Plot Size (acres) / ‡≤™‡≥ç‡≤≤‡≤æ‡≤ü‡≥ç ‡≤ó‡≤æ‡≤§‡≥ç‡≤∞ (‡≤é‡≤ï‡≤∞‡≥Ü)", min_value=0.1, step=0.1)
    
    if st.sidebar.button("Register / ‡≤®‡≥ã‡≤Ç‡≤¶‡≤æ‡≤Ø‡≤ø‡≤∏‡≤ø"):
        st.sidebar.success(f"Registered {name} successfully! / {name} ‡≤Ø‡≤∂‡≤∏‡≥ç‡≤µ‡≤ø‡≤Ø‡≤æ‡≤ó‡≤ø ‡≤®‡≥ã‡≤Ç‡≤¶‡≤æ‡≤Ø‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü!")
    
    # Load dataset
    df = load_data()
    
    # User input for soil type and irrigation
    st.write("### üå± Select Your Soil Type and Irrigation / ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø")
    soil_types = df['Soil type'].dropna().unique().tolist()
    irrigation_types = df['Irrigation'].dropna().unique().tolist()
    
    selected_soil = st.selectbox("Soil Type / ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞", soil_types)
    selected_irrigation = st.selectbox("Irrigation Type / ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞", irrigation_types)
    
    if st.button("Get Crop Recommendation / ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤∂‡≤ø‡≤´‡≤æ‡≤∞‡≤∏‡≥Å ‡≤™‡≤°‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø"):
        filtered_df = df[(df['Soil type'] == selected_soil) & (df['Irrigation'] == selected_irrigation)]
        
        if not filtered_df.empty:
            selected_entry = filtered_df.iloc[0]  # Pick the first matching entry
            st.write("### üåæ Recommended Crop and Season / ‡≤∂‡≤ø‡≤´‡≤æ‡≤∞‡≤∏‡≥Å ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶ ‡≤¨‡≥Ü‡≤≥‡≥Ü ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤π‡≤Ç‡≤ó‡≤æ‡≤Æ‡≥Å")
            st.write(f"**Season / ‡≤π‡≤Ç‡≤ó‡≤æ‡≤Æ‡≥Å:** {selected_entry['Season']}")
            st.write(f"**Crop / ‡≤¨‡≥Ü‡≤≥‡≥Ü:** {selected_entry['Crops']}")
        else:
            st.write("‚ùå No matching data found. Please try different inputs. / ‡≤Ø‡≤æ‡≤µ‡≥Å‡≤¶‡≥á ‡≤π‡≥ä‡≤Ç‡≤¶‡≤æ‡≤£‡≤ø‡≤ï‡≥Ü‡≤Ø ‡≤°‡≥á‡≤ü‡≤æ ‡≤≤‡≤≠‡≥ç‡≤Ø‡≤µ‡≤ø‡≤≤‡≥ç‡≤≤. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤¨‡≥á‡≤∞‡≥Ü ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø.")
    
if __name__ == "__main__":
    main()
