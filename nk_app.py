import streamlit as st
import pandas as pd

def load_data():
    # Load the pre-existing dataset
    file_path = "data_season.csv"  # Ensure this file is in the same directory or adjust the path accordingly
    df = pd.read_csv(file_path)
    return df

def main():
    st.set_page_config(page_title="Namma Kisaan", layout="wide")
    
    st.title("üåæ Namma Kisaan - ‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≤ø‡≤∏‡≤æ‡≤®‡≥ç üåæ")
    
    # Sidebar for registration
    st.sidebar.header("üë§ Farmer Registration / ‡≤∞‡≥à‡≤§ ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø")
    name = st.sidebar.text_input("Name / ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å")
    age = st.sidebar.number_input("Age / ‡≤µ‡≤Ø‡≤∏‡≥ç‡≤∏‡≥Å", min_value=18, max_value=100, step=1)
    aadhaar = st.sidebar.text_input("Aadhaar Number / ‡≤Ü‡≤¶‡≤æ‡≤∞‡≥ç ‡≤∏‡≤Ç‡≤ñ‡≥ç‡≤Ø‡≥Ü")
    owner_type = st.sidebar.radio("Ownership Type / ‡≤Æ‡≤æ‡≤≤‡≤ï‡≤§‡≥ç‡≤µ ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞", ["Owner / ‡≤Æ‡≤æ‡≤≤‡≥Ä‡≤ï", "Lessee / ‡≤¨‡≤æ‡≤°‡≤ø‡≤ó‡≥Ü"])
    location = st.sidebar.text_input("Location / ‡≤∏‡≥ç‡≤•‡≤≥")
    plot_size = st.sidebar.number_input("Plot Size (acres) / ‡≤™‡≥ç‡≤≤‡≤æ‡≤ü‡≥ç ‡≤ó‡≤æ‡≤§‡≥ç‡≤∞ (‡≤é‡≤ï‡≤∞‡≥Ü)", min_value=0.1, step=0.1)
    
    if st.sidebar.button("Register / ‡≤®‡≥ã‡≤Ç‡≤¶‡≤æ‡≤Ø‡≤ø‡≤∏‡≤ø"):
        st.sidebar.success(f"Registered {name} successfully! / {name} ‡≤Ø‡≤∂‡≤∏‡≥ç‡≤µ‡≤ø‡≤Ø‡≤æ‡≤ó‡≤ø ‡≤®‡≥ã‡≤Ç‡≤¶‡≤æ‡≤Ø‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü!")
        
        # Ask for soil type and irrigation type
        st.sidebar.subheader("üå± Soil and Irrigation Details / ‡≤Æ‡≤£‡≥ç‡≤£‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø ‡≤µ‡≤ø‡≤µ‡≤∞‡≤ó‡≤≥‡≥Å")
        soil_type = st.sidebar.selectbox("Select Soil Type / ‡≤Æ‡≤£‡≥ç‡≤£‡≤ø‡≤® ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞ ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø", ["Red Soil", "Black Soil", "Sandy Soil", "Clayey Soil"])
        irrigation_type = st.sidebar.selectbox("Select Irrigation Type / ‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø ‡≤µ‡≤ø‡≤ß‡≤æ‡≤® ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø", ["Canal", "Drip", "Sprinkler", "Rainfed"])
        
        # Load dataset
        df = load_data()
        
        # Filter based on soil type and irrigation type
        recommendation = df[(df['Soil type'].str.contains(soil_type, case=False, na=False)) &
                            (df['Irrigation'].str.contains(irrigation_type, case=False, na=False))]
        
        if not recommendation.empty:
            season = recommendation.iloc[0]['Season']
            crop = recommendation.iloc[0]['Crops']
            st.sidebar.write(f"üåæ Recommended Season: {season} / ‡≤∂‡≤ø‡≤´‡≤æ‡≤∞‡≤∏‡≥Å ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶ ‡≤π‡≤Ç‡≤ó‡≤æ‡≤Æ‡≥Å")
            st.sidebar.write(f"üåø Recommended Crop: {crop} / ‡≤∂‡≤ø‡≤´‡≤æ‡≤∞‡≤∏‡≥Å ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶ ‡≤¨‡≥Ü‡≤≥‡≥Ü")
        else:
            st.sidebar.write("‚ùå No recommendations available for the selected inputs / ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶ ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤ó‡≥Ü ‡≤∂‡≤ø‡≤´‡≤æ‡≤∞‡≤∏‡≥Å ‡≤≤‡≤≠‡≥ç‡≤Ø‡≤µ‡≤ø‡≤≤‡≥ç‡≤≤")
    
if __name__ == "__main__":
    main()
